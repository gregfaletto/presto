207+3070
217+429
130+1767
494+207
729+3070
701+3799
1223_3277
1223+3277
217+130
429+1767
646+1897
2543+4500
(217+2196)/2543
(217+1767)/2543
347/2543
347/2196
347/2543
701/4500
1897/2543
217/646
347/2543
1897/2543
217/646
1897/7043
5995/7043
2196/2543
1767+429
646/2543
2196/2543
1122+101
1288+1989
1122+1288
101+1989
1223+3277
2410+2090
557+89
774+1123
557+774
89+1123
646+1897
(217 + 1767)/2543
646/2543
2196/2543
217/347
217/646
130/347
(89+774)/2543
1897/2543
1331/2543
774/1897
1123/1897
217/646
1767/1897
557/646
1123/1897
(15+-1)/2
(32 - 1)/2
217*7 + 1767*20 + 429*0 + 130*15
557*15.5 + 1123*40 + 89*0 + 774*38
557*15 + 1123*40 + 89*0 + 774*38
1897*40
217*(.5*15+.5*-1)+1767*20 + 429*0 + 130*15
217+1767
1984/2543
646/2543
2196/2543
217/646
89+774
863/2543
1212/2543
1897/2543
1331/2543
89/1212
774/1897
217/646
1767/1897
557/646
1123/1897
1767*20 + 217*7 + 429*0 + 130*15
1897*20
1897*40
1123*40 + 557*15 + 89*0 + 774*38
.88*20
17.6-10.76
(6.84+4)/20
4266.6-1500-2375.36
23/30
?ifelse
90*1.5
.684*19
.529*34
279*(-5) + 80*45
652*(-5) + 89*45
15.99/3,99
15.99/3.99
90*1.5
50/74
47/74
50/70
-20-1280.22+159+4064.35-1500
(1 + 1/3)^2/(1/3)
library(MASS)
fractions((1 + 1/3)^2/(1/3))
fractions(4*16/3 - 1)
my_vari <- function(l, u){
stopifnot(l > 0)
stopifnot(l < u)
stopifnot(u < 1)
beta <- .5*log(u/(1-u)/ (l /(1- l)))
ret <- 12*(u - l)/(abs(beta)*l*(1-u))
return(ret)
}
my_vari(.1,.9)
my_vari(.4,.6)
my_vari(.2,.8)
my_vari2 <- function(l, u){
stopifnot(l > 0)
stopifnot(l < u)
stopifnot(u < 1)
log_term <- log(u/(1-u)/(l/(1-l)))
ret <- 24*(u - l)/(log_term*l*(1-u))
return(ret)
}
my_vari(.2,.8)
my_vari2(.2,.8)
4*24
my_cons <- function(l, u){
4*my_vari2(l, u) - 1
}
my_cons(.45, .55)
my_cons(.1, .9)
my_cons(.499, .501)
260/6
library(MASS)
fractions(260/6)
1360/16
6*85-260
-10*85+1100
1360/17
6*80-260
u <- .7
l <- .3
delta <- .005
u/(1 - delta - u)
l/(1 - delta - l)
12*8
x <- 1
.5*(2*x^3 -  1)*(2*x^3 + 1)
.5*(2*x^3 -  x)*(2*x^3 + x)
.5*(2*x^3 - x)*(2*x^3 + x) - 2 + 1/x^2
x
x^3 + .5*x+2
x <- 5
x^3 + .5*x+2
1 + 1/2 + 2
13/2
C <- 1
1/4*(2C^3 + C + 7)*16/3 - 2
1/4*(2*C^3 + C + 7)*16/3 - 2
C <- 5
1/4*(2*C^3 + C + 7)*16/3 - 2
cons <- function(u, l, delta){
C <- u/(1 - delta - u)
c <- (l - delta)/(1 - l)
return(max(C, 1/c))
}
cons <- function(l, u, delta){
C <- u/(1 - delta - u)
c <- (l - delta)/(1 - l)
return(max(C, 1/c))
}
cons(.1, .9, .005)
cons(.3, .7, .005)
cons(.3, .7, .01)
cons(.2, .8, .01)
final_result_mult <- function(l, u, delta){
C <- cons(l, u, delta)
1/4*(2*C^3 + C + 7)*16/3 - 2
}
final_result_mult(.2, .8, .01)
final_result_mult(.2, .8, .005)
final_result_mult(.2, .8, .01)
final_result_mult(.3, .7, .01)
final_result_mult(.6, .9, .01)
final_result_mult(.6, .8, .01)
final_result_mult(.1, .9, .01)
1.07^7
log(2)/log(1.07)
1.07^10
log(10)/log(1.07)
final_result_mult(delta=.01, l=.3, u=.7)
final_result_mult(delta=.01, l=.2, u=.8)
final_result_mult <- function(l, u, delta){
C <- cons(l, u, delta)
(1/4*(2*C^3 + C + 7)*16/3 - 2)*delta
}
final_result_mult(delta=.01, l=.2, u=.8)
final_result_mult(delta=.005, l=.3, u=.7)
final_result_mult(delta=.001, l=.2, u=.8)
final_result_mult(delta=.01, l=.3, u=.7)
final_result_mult(delta=.01, l=.2, u=.8)
48*3^3 + 24*3 + 168 - 2*log(5)
(48*3^3 + 24*3 + 168 - 2*log(5))/log(5)
Delta <- 1/4
1000*.01*.02
14/(.01*.02)
(6*3^3 - 6*1^3)/(3-1)
6*27
(1000*1.05^6 - 1000*1.05^0)/(6- 0)
1000*1.05^6
1000*1.05^0
15.8-14.55
(15.8-14.55)/(2015 - 2011)
(30 + 18)/2
(24 - 6)/(9 - 0)
16*5^2
16*3^2
(16*5^2 - 16*3^2)/(5 - )
(16*5^2 - 16*3^2)/(5 - 3)
400-144
(30300-27000)/(2002-1997)
(31860-30300)/(2004-2002)
(.1 - .4)/(4 - 0)
h <- .1
t <- 3
(4*(t+h)^2 - 4*t^2)/h
h <- .01
(4*(t+h)^2 - 4*t^2)/h
h <- .001
(4*(t+h)^2 - 4*t^2)/h
4*(t+h)^2
4*t^2
h
(4*(t+h)^2 - 4*t^2)/h
4*3.1^2 - 4*3^2
(3^4 - 3^0)/(4 - 0)
3^4 - 3^0
(3^(4+h) - 3^4)/h
h <- .000001
(3^(4+h) - 3^4)/h
(7*(t + h)^2 - 7*t^2)/h
t <- 1
h <- .1
(7*(t + h)^2 - 7*t^2)/h
h <- .01
(7*(t + h)^2 - 7*t^2)/h
h <- .001
(7*(t + h)^2 - 7*t^2)/h
(80.8 - 19.8)/(2010 - 1860)
(80.8 - 75.3)/(2010 - 1990)
(19.8 - 6)/(1860 - 1800)
220*.0218
12.1 - 3*(-.19)
69 + 4*.6
median(c(535, 155, 305, 720, 315, 214))
median(1:11)
median(c(69, 78, 82, 69, 98, 85))
?IQR
IQR(c(5,5,5,6,8,9,11,11,15,16,18,22,25,25,26))
length(c(5,5,5,6,8,9,11,11,15,16,18,22,25,25,26))
IQR(c(1,2,5,7,7,9,15,15,15,22,23,24,26))
length(c(1,2,5,7,7,9,15,15,15,22,23,24,26))
IQR(c(7,5,2,4,3,1,6))
range(c(535, 155, 305, 720, 315, 214))
720-155
85-78
63-48
median(c(90, 94, 84, 87, 89, 85, 83, 79, 72, 70, 72, 68, 69, 65, 53))
IQR(c(90, 94, 84, 87, 89, 85, 83, 79, 72, 70, 72, 68, 69, 65, 53))
50+60+64+50+64
(288-145)*2/3
(288-145)*1/2
MASS::fractions(1 - 2/3 + 1/4)
4282.5 - 573.38 - 1154.72
?as.dist
?cutree
6*16
rm(list=ls())
n <- 100
nsims <- 10
beta_hat_1 <- rep(as.numeric(NA), nsims)
beta_hat_2 <- rep(as.numeric(NA), nsims)
beta_star <- 1
for(i in 1:nsims){
X <- rnorm(n)
T_feat <- rbinom(n)
epsilon <- rnorm(n)
y <- beta_star*X + T_Feat + T_feat*X + epsilon
df <- data.frame(y=y, t=T_feat, x=X)
model1 <- lm(y ~ x, df)
model2 <- lm(y ~ x + t, df)
}
rm(list=ls())
n <- 100
nsims <- 10
beta_hat_1 <- rep(as.numeric(NA), nsims)
beta_hat_2 <- rep(as.numeric(NA), nsims)
beta_star <- 1
for(i in 1:nsims){
X <- rnorm(n)
T_feat <- rbinom(n, size=1)
epsilon <- rnorm(n)
y <- beta_star*X + T_Feat + T_feat*X + epsilon
df <- data.frame(y=y, t=T_feat, x=X)
model1 <- lm(y ~ x, df)
model2 <- lm(y ~ x + t, df)
}
rm(list=ls())
n <- 100
nsims <- 10
beta_hat_1 <- rep(as.numeric(NA), nsims)
beta_hat_2 <- rep(as.numeric(NA), nsims)
beta_star <- 1
for(i in 1:nsims){
X <- rnorm(n)
T_feat <- rbinom(n, size=1, prob=.5)
epsilon <- rnorm(n)
y <- beta_star*X + T_Feat + T_feat*X + epsilon
df <- data.frame(y=y, t=T_feat, x=X)
model1 <- lm(y ~ x, df)
model2 <- lm(y ~ x + t, df)
}
?rbinom
for(i in 1:nsims){
X <- rnorm(n)
T_feat <- rbinom(n, size=1, prob=.5)
epsilon <- rnorm(n)
y <- beta_star*X + T_feat + T_feat*X + epsilon
df <- data.frame(y=y, t=T_feat, x=X)
model1 <- lm(y ~ x, df)
model2 <- lm(y ~ x + t, df)
}
coef(model1)
coelf(model1)$x
coelf(model1)["x"]
coef(model1)["x"]
coef(model2)["x"]
rm(list=ls())
n <- 100
nsims <- 1000
beta_hat_1 <- rep(as.numeric(NA), nsims)
beta_hat_2 <- rep(as.numeric(NA), nsims)
beta_star <- 1
for(i in 1:nsims){
X <- rnorm(n)
T_feat <- rbinom(n, size=1, prob=.5)
epsilon <- rnorm(n)
y <- beta_star*X + T_feat + T_feat*X + epsilon
df <- data.frame(y=y, t=T_feat, x=X)
model1 <- lm(y ~ x, df)
model2 <- lm(y ~ x + t, df)
beta_hat_1[i] <- coef(model1)["x"]
beta_hat_2[i] <- coef(model2)["x"]
}
print("beta_hat_1:")
print(mean(beta_hat_1))
print(sum((beta_hat_1 - beta_star)^2)/nsims)
print("beta_hat_2:")
print(mean(beta_hat_2))
print(sum((beta_hat_2 - beta_star)^2)/nsims)
rm(list=ls())
n <- 100
nsims <- 1000
beta_hat_1 <- rep(as.numeric(NA), nsims)
beta_hat_2 <- rep(as.numeric(NA), nsims)
beta_star <- 1
for(i in 1:nsims){
T_feat <- rbinom(n, size=1, prob=.5)
X <- .5*rnorm(n) + T_feat*.5*rnorm(n)
epsilon <- rnorm(n)
y <- beta_star*X + T_feat + T_feat*X + epsilon
df <- data.frame(y=y, t=T_feat, x=X)
model1 <- lm(y ~ x, df)
model2 <- lm(y ~ x + t, df)
beta_hat_1[i] <- coef(model1)["x"]
beta_hat_2[i] <- coef(model2)["x"]
}
print("beta_hat_1:")
print(mean(beta_hat_1))
print(sum((beta_hat_1 - beta_star)^2)/nsims)
print("beta_hat_2:")
print(mean(beta_hat_2))
print(sum((beta_hat_2 - beta_star)^2)/nsims)
rm(list=ls())
n <- 100
nsims <- 1000
beta_hat_1 <- rep(as.numeric(NA), nsims)
beta_hat_2 <- rep(as.numeric(NA), nsims)
beta_star <- 1
for(i in 1:nsims){
# T_feat <- rbinom(n, size=1, prob=.5)
T_feat <- rnorm(n)
X <- .5*rnorm(n) + .5*T_feat
epsilon <- rnorm(n)
y <- beta_star*X + T_feat + T_feat*X + epsilon
df <- data.frame(y=y, t=T_feat, x=X)
model1 <- lm(y ~ x, df)
model2 <- lm(y ~ x + t, df)
beta_hat_1[i] <- coef(model1)["x"]
beta_hat_2[i] <- coef(model2)["x"]
}
print("beta_hat_1:")
print(mean(beta_hat_1))
print(sum((beta_hat_1 - beta_star)^2)/nsims)
print("beta_hat_2:")
print(mean(beta_hat_2))
print(sum((beta_hat_2 - beta_star)^2)/nsims)
rm(list=ls())
n <- 100
nsims <- 1000
beta_hat_1 <- rep(as.numeric(NA), nsims)
beta_hat_2 <- rep(as.numeric(NA), nsims)
beta_star <- 1
for(i in 1:nsims){
# T_feat <- rbinom(n, size=1, prob=.5)
T_feat <- rnorm(n)
# X <- .5*rnorm(n) + .5*T_feat
X <- rnorm(n)
epsilon <- rnorm(n)
y <- beta_star*X + T_feat + T_feat*X + epsilon
df <- data.frame(y=y, t=T_feat, x=X)
model1 <- lm(y ~ x, df)
model2 <- lm(y ~ x + t, df)
beta_hat_1[i] <- coef(model1)["x"]
beta_hat_2[i] <- coef(model2)["x"]
}
print("beta_hat_1:")
print(mean(beta_hat_1))
print(sum((beta_hat_1 - beta_star)^2)/nsims)
print("beta_hat_2:")
print(mean(beta_hat_2))
print(sum((beta_hat_2 - beta_star)^2)/nsims)
(291.46 + 40.06)/2
1715.22
6946.51-1715.22-1500
1041.69+3731.29
3731.29+1041.69-100
3731.29+1041.69-100-4282.50
?is.data.frame
library(MASS)
fractions(2/18 - 1/256)
fractions(4*(1/3 - 1/5))
fractions(4*(1/4 - 1/6))
fractions(1/3 - (8/15)^2)
package_version("testthat")
library(testthat)
package_version("testthat")
packageVersion("testthat")
remotes::install_github("jacobbien/litr-project", subdir = "litr")
rm(list=ls())
rmarkdown::draft("create-rhello.Rmd", template = "make-an-r-package", package = "litr")
rmarkdown::draft("create-rhello.Rmd", template = "make-an-r-package", package = "litr")
?case_when
library(tidyverse)
setwd("/Users/gregfaletto/OneDrive - USC Marshall School of Business/Proportional odds generalization/Code/Simulations")
source("param_relax_prop_odds_rand_sim.R")
sim <- param_relax_prop_odds_unif_more2
e <- evals(sim)
e_df <- as.data.frame(e)
models <- model(sim)
print_sim_stats <- function(e_df, models){
model_names <- unique(e_df$Model)
n_models <- length(model_names)
model_labels <- rep(as.character(NA), n_models)
method_names <- unique(e_df$Method)
for(i in 1:n_models){
ind_i <- models[[i]]@name == model_names
stopifnot(sum(ind_i) == 1)
stopifnot(which(ind_i) == i)
model_labels[ind_i] <- models[[i]]@label
}
# Pairwise t_statistics
for(i in 1:n_models){
e_df_i <- e_df[e_df$Model == model_names[i], ]
# Logit t statistic
stopifnot("fused_polr" %in% method_names)
stopifnot("logit_meth" %in% method_names)
logit_results <- t.test(x=e_df_i[e_df_i$Method == "fused_polr", "rare_prob_mse_gen"],
y=e_df_i[e_df_i$Method == "logit_meth", "rare_prob_mse_gen"],
alternative="less", paired=TRUE, var.equal=FALSE)
print("")
print("")
print("")
print("Model:")
print(model_labels[i])
print("T-statistic for logistic regression vs. PRESTO (one-tailed test of paired differences):")
print(logit_results$statistic)
print("p-value:")
print(logit_results$p.value)
# Proportional odds t statistic
stopifnot("prop_odds_meth" %in% method_names)
po_results <- t.test(x=e_df_i[e_df_i$Method == "fused_polr", "rare_prob_mse_gen"],
y=e_df_i[e_df_i$Method == "prop_odds_meth", "rare_prob_mse_gen"],
alternative="less", paired=TRUE, var.equal=FALSE)
print("")
print("T-statistic for PO vs. PRESTO (one-tailed test of paired differences):")
print(po_results$statistic)
print("p-value:")
print(po_results$p.value)
}
}
print_sim_stats(e_df, models)
sim <- param_relax_prop_odds_rand_more2
e <- evals(sim)
e_df <- as.data.frame(e)
models <- model(sim)
print_sim_stats(e_df, models)
39.37113/7
12*60/(39.37113/7)
7*125
7*120
sim |> evaluate(prop_rare_obs) |> tabulate_eval("prop_rare_obs")
